{"version":3,"sources":["components/button.js","components/header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","deleteTask","method","filter","Math","floor","random","newTask","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da13cbb8.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst button = ({ color, text, onClick }) => {\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={onClick} style={{ backgroundColor: color }} className=\"btn\">{text}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nbutton.defaultProps = {\r\n    color: \"steelblue\"\r\n}\r\n\r\nbutton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\n\r\nexport default button\r\n\r\n\r\n","import PropTypes from 'prop-types'\r\nimport Button from './button'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n \r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n            <Button color={showAdd ? \"gray\" : \"green\"} text={showAdd ? \"Close\" : \"Add\"} onClick={onAdd} />\r\n\r\n        </header>\r\n    )\r\n}\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker'\r\n\r\n}\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n// CSS in JS\r\n// const headingStyle = {\r\n//     color: \"red\", \r\n//     backgroundColor: \"black\" \r\n// }\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => {\r\n            onToggle(task.id)\r\n        }}>\r\n            <h3>{task.text} <FaTimes style={{ color: 'red', cursor: 'pointer' }} onClick={() => onDelete(task.id)} /></h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task.js'\r\n\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n\r\n    return (\r\n        <>\r\n            {tasks.map((task,index) => (\r\n                <Task key={index} task={task} onDelete={onDelete} onToggle={onToggle}/>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Tasks","import { useState } from 'react'\r\n\r\n\r\n    \r\n\r\nconst AddTask = ({ onAdd }) => {\r\n\r\n    const [text, setText] = useState(\"\")\r\n    const [day, setDay] = useState(\"\")\r\n    const [reminder, setReminder] = useState(false)\r\n    \r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text) {\r\n            alert(\"Please add task\")\r\n            return\r\n        }\r\n\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n    \r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className=\"form-control\">\r\n                <label >Task</label>\r\n                <input type=\"text\" placeholder=\"Add Task\" value={text} onChange={(e) => setText(e.target.value)}/>\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label >Day and Time</label>\r\n                <input type=\"text\" placeholder=\"Add Day & Time\" value={day} onChange={(e) => setDay(e.target.value)} />\r\n            </div>\r\n            <div className=\"form-control form-control-check\">\r\n                <label >Set Reminder</label>\r\n                <input \r\n                    type=\"checkbox\" \r\n                    checked={reminder}\r\n                    value={reminder} \r\n                    onChange={(e) => setReminder(e.currentTarget.checked)} \r\n                    \r\n                />\r\n            </div>\r\n\r\n            <input type=\"submit\" value='Save Task' className=\"btn btn-block\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState, useEffect } from 'react'\n\nimport Header from './components/header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\n\n\nconst App = () => {\n  const[showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async() => {\n      const tasksFromServer = await  fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n\n  //Fetch Tasks \n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n\n    const data = await res.json()\n\n    return data\n  }\n\n  // Delete task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method:\"DELETE\",\n    })\n\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n//Toggle reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks.map((task)=> task.id === id ? {...task, reminder: !task.reminder} : task))\n  }\n  \n  // Add Task\n\n  const addTask = (task) => {\n    const id= Math.floor(Math.random() * 10000) + 1\n    \n    const newTask = { id, ...task}\n    setTasks([...tasks, newTask])\n  }\n  \n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length>0 ? (\n      <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />) : \"No task to show\"  } \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}